[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "keygen-cli"
version = "0.2.1"
description = "A CLI application interacting with Keygen.sh API"
authors = [{name = "Dmytro Zlobodukhov"}]
license = {text = "MIT"}
readme = "README.md"
classifiers = [
    "Topic :: Utilities",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: MIT License",
]
requires-python = ">=3.10"
dependencies = [
    "click",
    "requests",
    "prompt-toolkit",
    "python-dotenv",
    "tabulate",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pre-commit",
    "ruff",
    "bump-my-version",
]

[project.scripts]
kgsh = "keygen_cli.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
your_project_name = ["py.typed"]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
line-length = 128
target-version = "py312"


[tool.ruff.lint]
ignore = [
    "D",    # Requires docstrings for everything and specific docstring format
    "F811", # redefinition of unused '...' (multiple functions with the same name exist for different API endpoints)
    "C901", # function is too complex
]
select = ["E", "F", "I", "N", "W", "B", "C", "D"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
known-first-party = ["keygen_cli"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

[tool.mypy]
strict = true

[tool.bumpversion]
current_version = "0.2.1"
parse = '(?P<major>\d+)\.(?P<minor>\d+)\.(?P<patch>\d+)((?P<release>[a-z]+)(?P<build>\d+))?'
serialize = [
    "{major}.{minor}.{patch}{release}{build}",
    "{major}.{minor}.{patch}-{release}.{build}",
    "{major}.{minor}.{patch}",
]
commit = true
tag = true
sign_tags = true
tag_name = "{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
commit_message = "Bump version: {current_version} → {new_version}"
allow_dirty = false
post_commit_hooks = ["git push --follow-tags"]

[tool.bumpversion.parts.release]
optional_value = "final"
values = ["a", "b", "dev", "rc", "final"]

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'